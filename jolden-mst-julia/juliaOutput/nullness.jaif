// Automatically generated on Sat Apr 19 22:26:45 CDT 2014
// with the Julia analyser version April 18, 2014
// by Julia Srl, Italy (http://www.juliasoft.com).

// This annotation file contains information about the
// fields, parameters and return values of the analysed program.
// This information can be plugged inside the source code
// of the analysed application by using a tool such as that
// described at
// http://types.cs.washington.edu/annotation-file-utilities/

package org.checkerframework.checker.nullness.qual:

annotation @Nullable:
annotation @Raw:
annotation @PolyNull:

package java.lang:

annotation @SuppressWarnings:
    String[] value


package mst:

class BlueReturn:
    field vert:
      type: @Nullable
    method vert()LVertex;:
      return: @Nullable

class Graph:
    field CONST_b: @SuppressWarnings({"rawness", "nullness"})
    field CONST_m1: @SuppressWarnings({"rawness", "nullness"})
    field RANGE: @SuppressWarnings({"rawness", "nullness"})
    field nodes:
      type:
      inner-type 0, 0: @Nullable
    method createGraph(I)V:  @SuppressWarnings({"rawness", "nullness"})
      receiver: @Raw
    method firstNode()LVertex;:
      return: @Nullable

class HashEntry:
    field next:
      type: @Nullable
    method <init>(Ljava/lang/Object;Ljava/lang/Object;LHashEntry;)V:
      parameter #2:
        type: @Nullable
    method next()LHashEntry;:
      return: @Nullable
    method setNext(LHashEntry;)V:  @SuppressWarnings({"rawness", "nullness"})
      receiver: @Raw
      parameter #0:
        type: @Nullable @Raw

class Hashtable:
    field array:
      type:
      inner-type 0, 0: @Nullable
    method get(Ljava/lang/Object;)Ljava/lang/Object;:
      parameter #0:
        type: @Nullable
      return: @Nullable
    method hashMap(Ljava/lang/Object;)I:
      parameter #0:
        type: @Nullable
    method put(Ljava/lang/Object;Ljava/lang/Object;)V:
      parameter #0:
        type: @Nullable
    method remove(Ljava/lang/Object;)V:  @SuppressWarnings({"rawness", "nullness"})
      receiver: @Raw
      parameter #0:
        type: @Nullable @Raw

class MST:
    field MyVertexList:
      type: @Nullable
    method <init>()V:  @SuppressWarnings({"rawness", "nullness"})
    method BlueRule(LVertex;LVertex;)LBlueReturn;:
      parameter #0:
        type: @Nullable
      parameter #1:
        type: @Nullable
    method doAllBlueRule(LVertex;)LBlueReturn;:
      parameter #0:
        type: @Nullable

class Vertex:
    field next:
      type: @Nullable
    method <init>(LVertex;I)V:
      parameter #0:
        type: @Nullable
    method next()LVertex;:
      return: @Nullable
    method setNext(LVertex;)V:
      parameter #0:
        type: @Nullable
